name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  packages: write
  contents: read

jobs:
  build-and-push:
    name: Build and push docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ghcr.io/${{ github.repository }}/php-app:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if Dockerfile changed
        id: check
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
            | grep -E '^docker/php-fpm/Dockerfile' || true)
          if [ -n "$CHANGED" ]; then
            echo "docker_changed=true" >> $GITHUB_OUTPUT
          else
            echo "docker_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: steps.check.outputs.docker_changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.check.outputs.docker_changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.check.outputs.docker_changed == 'true'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}/php-app:latest
          file: docker/php-fpm/Dockerfile
          target: base
  phpstan:
    name: Static analysis - phpstan
    runs-on: ubuntu-latest
    needs: build-and-push
    container: ghcr.io/${{ github.repository }}/php-app:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install project
        run: |
          echo "Installing dependencies..."
          composer install --no-interaction --prefer-dist

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --configuration=phpstan.dist.neon

  phpcs:
    name: Static analysis - php-cs-fixer
    runs-on: ubuntu-latest
    needs: build-and-push
    container: ghcr.io/${{ github.repository }}/php-app:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install project
        run: |
          composer install --no-interaction --prefer-dist
          cd tools && composer install --no-interaction --prefer-dist

      - name: Run PHPCS
        run: tools/vendor/bin/php-cs-fixer fix --allow-risky=yes --dry-run --verbose --show-progress=dots --diff

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build-and-push
    container: ghcr.io/${{ github.repository }}/php-app:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install project
        run: composer install --no-interaction --prefer-dist

      - name: Run unit tests
        run: vendor/bin/phpunit --testsuite unit --colors=always

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build-and-push
    services:
      postgres-test:
        image: postgres:17
        env:
          POSTGRES_USER: user_test
          POSTGRES_PASSWORD: password_test
          POSTGRES_DB: app_db_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    container: ghcr.io/${{ github.repository }}/php-app:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install project
        run: composer install --no-interaction --prefer-dist

      - name: Run integration tests
        run: APP_RESET_DATABASE=1 vendor/bin/phpunit --testsuite integration --colors=always

  opeanapi-validate:
    name: OpenApi schema validate
    runs-on: ubuntu-latest
    needs: build-and-push
    container: ghcr.io/${{ github.repository }}/php-app:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install project
        run: npm install --no-interactio

      - name: Validate OpenApi schema
        run: npx swagger-cli validate docs/openapi/index.yaml
